<script src="{{ 'vue.min.js' | asset_url }}" defer></script>

<div class="flex flex-col items-center mt-6 md:px-10 lg:px-16 max-w-screen-2xl mx-auto">
  <span class="flex md:ml-5 md:mr-auto text-xs md:text-sm">
    <a href="/" class="text-neutral-400">HOME</a>
    <p class="text-neutral-400">&nbsp;/&nbsp;</p>
    <p class="uppercase">{{ collection.title }}</p>
  </span>
  <h1 class="mt-3 font-black text-neutral-800 text-3xl md:text-4xl uppercase">{{ collection.title }}</h1>
  <p class="mt-4 text-center mx-8 max-w-sm md:max-w-lg">
    {{ collection.description }}
  </p>

  <!-- CREATE filters_object -->
  {% capture filters_object %}
  [
  {% for filter in collection.filters %}
    {% case filter.type %}
      {% when 'list' %}
        {% for value in filter.values %}
          {% assign id = value.param_name | append: value.value | sha1 %}
          {% capture selector %}
            [id='filter-{{ id }}'], [id='filter-mobile-{{ id }}']
          {% endcapture %}
          {
            "selector": {{ selector | strip | json }},
            "label": {{ value.label | replace: '"', '&quot;' | json }},
            "name": {{ value.param_name | json}},
            "value": {{ value.value | json }},
            "active": {{ value.active | json }},
            "type": "list"
          }
          {% unless forloop.last %},{% endunless %}
        {% endfor %}
      {% when 'price_range' %}
        {% assign id = filter.min_value.param_name | append: filter.min_value.value | sha1 %}
        {% capture selector %}
          [id='filter-{{ id }}'], [id='filter-mobile-{{ id }}']
        {% endcapture %}
        {
          "selector": {{ selector | strip | json }},
          "label": ">{{ filter.min_value.value | money }}",
          "name": {{ filter.min_value.param_name | json}},
          "value": {{ filter.min_value.value | money_without_currency | replace: ',', '' | json }},
          "active": {% if filter.min_value.value %}true{% else %}false{% endif %},
          "type": "price_range"
        },
        {% assign id = filter.max_value.param_name | append: filter.max_value.value | sha1 %}
        {% capture selector %}
          [id='filter-{{ id }}'], [id='filter-mobile-{{ id }}']
        {% endcapture %}
        {
          "selector": {{ selector | strip | json }},
          "label": "<{{ filter.max_value.value | money }}",
          "name": {{ filter.max_value.param_name | json}},
          "value": {{ filter.max_value.value | money_without_currency | replace: ',', '' | json }},
          "active": {% if filter.max_value.value %}true{% else %}false{% endif %},
          "type": "price_range"
        }
    {% endcase %}
    {% unless forloop.last %},{% endunless %}
  {% endfor %}
  ]
  {% endcapture %}

  <!-- FILTER / SORT BY -->
  <div id="filter-sort-modal" class="flex flex-col group mt-10 open:mt-0 sm:open:mt-10 w-full px-3 sm:px-0 relative open:fixed sm:open:relative open:min-h-screen sm:open:min-h-0 top-0 open:z-50 sm:open:z-20 open:bg-white sm:open:bg-none open:bg-opacity-70 open:backdrop-blur-lg sm:open:backdrop-blur-none">
    <svg onclick="closeModal()" class="hidden group-open:block sm:group-open:hidden ml-auto mt-4" width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg">
      <path d="M10.1952 8.89253L17.564 1.52364C17.7097 1.35359 17.7858 1.13486 17.7771 0.911145C17.7685 0.687433 17.6757 0.475221 17.5174 0.316914C17.3591 0.158608 17.1469 0.0658678 16.9232 0.0572268C16.6995 0.0485858 16.4808 0.12468 16.3107 0.270304L8.94182 7.63919L1.57293 0.261415C1.40555 0.0940338 1.17853 0 0.941817 0C0.705104 0 0.478086 0.0940338 0.310705 0.261415C0.143324 0.428796 0.0492905 0.655813 0.0492905 0.892526C0.0492905 1.12924 0.143324 1.35626 0.310705 1.52364L7.68848 8.89253L0.310705 16.2614C0.217655 16.3411 0.142081 16.4392 0.0887272 16.5494C0.0353732 16.6597 0.00539083 16.7798 0.000662392 16.9023C-0.00406605 17.0247 0.016561 17.1467 0.0612495 17.2608C0.105938 17.3749 0.173723 17.4785 0.26035 17.5651C0.346976 17.6517 0.450574 17.7195 0.56464 17.7642C0.678707 17.8089 0.80078 17.8295 0.923197 17.8248C1.04561 17.8201 1.16573 17.7901 1.27601 17.7367C1.38629 17.6834 1.48435 17.6078 1.56404 17.5147L8.94182 10.1459L16.3107 17.5147C16.4808 17.6604 16.6995 17.7365 16.9232 17.7278C17.1469 17.7192 17.3591 17.6264 17.5174 17.4681C17.6757 17.3098 17.7685 17.0976 17.7771 16.8739C17.7858 16.6502 17.7097 16.4315 17.564 16.2614L10.1952 8.89253Z" fill="black"/>
    </svg>
    <div class="group-open:mt-4 sm:group-open:mt-0 flex justify-evenly lg:justify-between border-y lg:border-b-0 border-black">
      <div class="flex py-4 items-center" onclick="toggleFilter()">
        <p class="text-lg">FILTER <span :class="{ 'hidden': !activeFilters.length }">({ activeFilters.length })</span></p> <!-- Add in the count later -->
        <div class="flex flex-col items-center ml-2 pt-1 pb-2 w-4" aria-label="filter button">
          <div class="filter-icon-line w-4 open:w-2 h-px bg-black transition-all duration-300"></div>
          <div class="filter-icon-line mt-1 w-3 open:w-3 h-px bg-black transition-all duration-300"></div>
          <div class="filter-icon-line mt-1 w-2 open:w-4 h-px bg-black transition-all duration-300"></div>
        </div>
      </div>
      <span class="my-2 w-px bg-black lg:hidden"></span>
      <div class="flex items-center py-4" onclick="toggleSort()">
        <p class="text-lg flex items-center"><span class="hidden lg:block mr-3 text-neutral-400 text-base">{{ collection.products | size }} Items</span>SORT BY</p>
        <svg id="sort-arrow" class="ml-2 w-2.5 h-1.5 transition-all duration-300" width="16" height="9" viewBox="0 0 16 9" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
          <path d="M14.8894 0.188938L7.99929 6.90537L1.10916 0.188938C0.986054 0.0686954 0.820797 0.00137848 0.648713 0.00137848C0.476628 0.00137848 0.311372 0.0686954 0.188268 0.188938C0.128661 0.247341 0.0813067 0.317049 0.0489791 0.393983C0.0166514 0.470916 0 0.553527 0 0.636976C0 0.720426 0.0166514 0.803036 0.0489791 0.879969C0.0813067 0.956902 0.128661 1.02661 0.188268 1.08501L7.51817 8.23157C7.64689 8.35704 7.81954 8.42726 7.99929 8.42726C8.17905 8.42726 8.3517 8.35704 8.48042 8.23157L15.8103 1.08639C15.8703 1.02795 15.9181 0.958067 15.9506 0.880878C15.9832 0.80369 16 0.720758 16 0.636976C16 0.553195 15.9832 0.470262 15.9506 0.393074C15.9181 0.315885 15.8703 0.246006 15.8103 0.187559C15.6872 0.0673163 15.522 0 15.3499 0C15.1778 0 15.0125 0.0673163 14.8894 0.187559V0.188938Z" fill="currentColor"/>
        </svg>
      </div>
    </div>
    <form
      ref="collectionFilters"
      id="collection-filters"
      name="collection-filters"
      class="lg:absolute lg:w-1/3 lg:mt-20 lg:pb-8 lg:bg-white group-open:lg:border-t border-neutral-400"
    >
      <div id="filter-pane" class="hidden flex-col px-6">
        <div class="filters">
          <p class="text-sm font-medium mt-8" :class="{ 'hidden': !activeFilters.length }">CLEAR FILTERS</p>
          <div class="flex flex-wrap mt-3" :class="{ 'hidden': !activeFilters.length }">
            <button
              v-for="{ label, selector } in activeFilters"
              @click.prevent="removeFilter(selector)"
              aria-label="Remove Filter"
              class="flex text-sm mr-4 hover:text-downy-300"
            >
              <span class="text-black">{ renderQuotes(label) }</span>
              <svg class="ml-1.5 mt-1 w-2.5 h-2.5" width="18" height="18" viewBox="0 0 18 18" fill="currentColor" xmlns="http://www.w3.org/2000/svg">
                <path d="M10.1952 8.89253L17.564 1.52364C17.7097 1.35359 17.7858 1.13486 17.7771 0.911145C17.7685 0.687433 17.6757 0.475221 17.5174 0.316914C17.3591 0.158608 17.1469 0.0658678 16.9232 0.0572268C16.6995 0.0485858 16.4808 0.12468 16.3107 0.270304L8.94182 7.63919L1.57293 0.261415C1.40555 0.0940338 1.17853 0 0.941817 0C0.705104 0 0.478086 0.0940338 0.310705 0.261415C0.143324 0.428796 0.0492905 0.655813 0.0492905 0.892526C0.0492905 1.12924 0.143324 1.35626 0.310705 1.52364L7.68848 8.89253L0.310705 16.2614C0.217655 16.3411 0.142081 16.4392 0.0887272 16.5494C0.0353732 16.6597 0.00539083 16.7798 0.000662394 16.9023C-0.00406605 17.0247 0.016561 17.1467 0.0612495 17.2608C0.105938 17.3749 0.173723 17.4785 0.26035 17.5651C0.346976 17.6517 0.450574 17.7195 0.56464 17.7642C0.678707 17.8089 0.80078 17.8295 0.923197 17.8248C1.04561 17.8201 1.16573 17.7901 1.27601 17.7367C1.38629 17.6834 1.48435 17.6078 1.56404 17.5147L8.94182 10.1459L16.3107 17.5147C16.4808 17.6604 16.6995 17.7365 16.9232 17.7278C17.1469 17.7192 17.3591 17.6264 17.5174 17.4681C17.6757 17.3098 17.7685 17.0976 17.7771 16.8739C17.7858 16.6502 17.7097 16.4315 17.564 16.2614L10.1952 8.89253Z" fill="currentColor"/>
              </svg>
            </button>
          </div>
          <!-- ANCHOR Mobile Filter Inputs -->
          <div class="option-collapse">
            <div id="filter-options">
              {% for filter in collection.filters %}
              <fieldset
                form="collection-filters"
                name="{{ filter.label }}"
                class="filter-{{ filter.type }} mobile-fields mt-8"
              >
                <legend class="text-sm font-medium uppercase">{{ filter.label }}</legend>
                <div class="input-grid flex flex-col [&>input:checked+label]:text-downy-300">
                  {% case filter.type %}
                    {% when 'list' %}
                      {% for filter_value in filter.values %}
                      {% assign id = filter_value.param_name | append: filter_value.value | sha1 %}
                      {% unless filter_value.label == "Out of stock" %}
                      <input
                        id="filter-mobile-{{ id }}"
                        type="checkbox"
                        name="{{ filter_value.param_name }}"
                        value="{{ filter_value.value }}"
                        {% if filter_value.active %}checked{% endif %}
                        {% unless filter_value.count > 0 or filter_value.active %}disabled{% endunless %}
                        hidden
                      >
                      <label
                        for="filter-mobile-{{ id }}"
                        title="{{ filter_value.label | escape }}"
                        tabindex="0"
                        @keydown.enter="$event.target.click()"
                        class="mt-4 text-sm"
                      >{{ filter_value.label }}</label>
                  {% endunless %}

                      {% endfor %}
                    {% when 'price_range' %}
                      <div class="flex pt-4">
                        {% assign id = filter.min_value.param_name | append: filter.min_value.value | sha1 %}
                        <input
                          id="filter-mobile-{{ id }}"
                          name="{{ filter.min_value.param_name }}"
                          type="number"
                          placeholder="0"
                          value="{{ filter.min_value.value | money_without_currency | replace: ',', '' }}"
                          min="0"
                          @change="handleMinPriceChange"
                          class="w-20 py-2 px-4 rounded-md border border-black bg-transparent text-sm"
                        >
                        <span class="mx-10 my-auto w-4 h-px bg-black"></span>
                        {% assign id = filter.max_value.param_name | append: filter.max_value.value | sha1 %}
                        <input
                          id="filter-mobile-{{ id }}"
                          name="{{ filter.max_value.param_name }}"
                          type="number"
                          placeholder="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                          value="{{ filter.max_value.value | money_without_currency | replace: ',', '' }}"
                          :min="minPrice"
                          max="{{ filter.range_max | money_without_currency | replace: ',', '' }}"
                          @change="handleMaxPriceChange"
                          class="w-20 py-2 px-4 rounded-md border border-black bg-transparent text-sm"
                        >
                      </div>
                  {% endcase %}
                </div>
                {% if forloop.last %}
                  <div class="flex mt-8">
                    <input class="py-4 w-1/2 bg-downy-300 text-white font-medium text-lg mr-1" type="submit" @click.prevent="handleSubmit" value="APPLY NOW">
                    <p class="py-4 w-1/2 border border-black font-medium text-lg text-center ml-1" @click.prevent="clearFilters" aria-label="Clear Filters">CLEAR ALL</p>
                  </div>
                {% endif %}
              </fieldset>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
      <div id="sort-pane" class="hidden flex-col mt-5 px-6">
        <p class="text-sm font-medium">SORT BY</p>
        <!-- ANCHOR Sort Inputs -->
        <div class="sort">
          {% assign sort_by = collection.sort_by | default: collection.default_sort_by %}
          <div class="option-collapse">
            <fieldset
              id="sort-by"
              form="collection-filters"
              name="sort"
            >
              <div class="input-grid flex flex-col [&>input:checked+label]:text-downy-300">
                {% for sort_option in collection.sort_options %}
                {% assign handle = sort_option.name %}
                {% case handle %}
                  {% when "Date, new to old" %}
                  {% when "Date, old to new" %}
                  {% else %}
                  <input
                    id="sort-{{ sort_option.value }}"
                    type="radio"
                    name="sort_by"
                    value="{{ sort_option.value }}"
                    {% if sort_option.value == sort_by %}checked{% endif %}
                    hidden
                  >
                  <label
                    for="sort-{{ sort_option.value }}"
                    title="{{ sort_option.name | escape }}"
                    tabindex="0"
                    @keydown.enter="$event.target.click()"
                    class="mt-4"
                  >{{ sort_option.name }}</label>
                {% endcase %}
                {% endfor %}
              </div>
              <input
                class="mt-8 py-4 w-full bg-downy-300 text-white font-medium text-lg"
                type="submit"
                @click.prevent="handleSubmit"
                value="APPLY NOW">
            </fieldset>
          </div>
        </div>
      </div>
    </form>
  </div>

  <!-- PRODUCT GRID -->
  <div class="my-8 px-3 md:px-0 grid grid-cols-2 sm:grid-cols-3 gap-3 lg:gap-4 gap-y-5 lg:gap-y-12">
    {% for product in collection.products %}
     {% if section.settings.split_variants %}
        {% if product.options_by_name['color'] %}
          {% for color in product.options_by_name['color'].values %}
            {% for variant in product.variants %}
              {% if variant.options contains color %}
                <a href="{{ variant.url }}" class="flex flex-col items-center">
                  <div class="group aspect-square relative">
                    <img class="w-full h-full object-cover relative z-0" src="{{ variant.featured_image | image_url: width: 512 }}" alt="{{ product.title }} {{ color }}">
                    {% assign found_second_image = false %}
                    {% for image in product.images %}
                      {% unless image.src == variant.featured_image.src %}
                        {% assign image_alt = image.alt | downcase %}
                        {% assign color_downcase = color | downcase %}
                        {% if image_alt contains color_downcase and image_alt != color_downcase %}
                          <img class="opacity-0 group-hover:opacity-100 transition-opacity duration-200 absolute z-10 top-0 left-0 w-full h-full object-cover" src="{{ image | image_url: width: 512 }}" alt="{{ product.title }} {{ color }} lifestyle image">
                          {% assign found_second_image = true %}
                        {% endif %}
                      {% endunless %}
                      {% if found_second_image %}
                        {% break %}
                      {% endif %}
                    {% endfor %}
                  </div>
                  <p class="text-xs md:text-sm lg:text-base mt-1.5 lg:mt-8 font-medium text-center">{{ product.title }} - {{ color }}</p>
                  {%- comment -%} <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto">{{ variant.price | money_with_currency }}</p> {%- endcomment -%}
                  {% if product.compare_at_price %}
                  <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto"><span style="text-decoration: line-through;">{{ variant.compare_at_price | money_without_trailing_zeros }}</span> <span style="color: #60cdcb; font-weight: bold;">{{ variant.price | money_without_trailing_zeros }}</span></p>
                  {% else %}
                  <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto">{{ variant.price | money_without_trailing_zeros }}</p>
                  {% endif %}
                </a>
                {% break %}
              {% endif %}
            {% endfor %}
          {% endfor %}
        {% else %}
          <a href="{{ product.url }}" class="flex flex-col items-center">
            <div class="group aspect-square relative">
              <img class="w-full h-full object-cover relative z-0" src="{{ product.featured_image | image_url: width: 512 }}" alt="{{ product.title }}">
              {% if product.images[1] %}
                <img class="opacity-0 group-hover:opacity-100 transition-opacity duration-200 absolute z-10 top-0 left-0 w-full h-full object-cover" src="{{ product.images[1] | image_url: width: 512 }}" alt="{{ product.title }} lifestyle image">
              {% endif %}
            </div>
            <p class="text-xs md:text-sm lg:text-base mt-1.5 lg:mt-8 font-medium text-center">{{ product.title }}</p>
            {% if product.compare_at_price %}
            <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto"><span style="text-decoration: line-through;">{{ product.compare_at_price | money_without_trailing_zeros }}</span> <span style="color: #60cdcb; font-weight: bold;">{{ product.price | money_without_trailing_zeros }}</span></p>
            {% else %}
            <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto">{{ product.price | money_without_trailing_zeros }}</p>
            {% endif %}
          </a>
        {% endif %}
      {% else %}
        <a href="{{ product.url }}" class="flex flex-col items-center">
          <div class="group aspect-square relative">
            <img class="w-full h-full object-cover relative z-0" src="{{ product.featured_image | image_url: width: 512 }}" alt="{{ product.title }}">
            {% if product.images[1] %}
              <img class="opacity-0 group-hover:opacity-100 transition-opacity duration-200 absolute z-10 top-0 left-0 w-full h-full object-cover" src="{{ product.images[1] | image_url: width: 512 }}" alt="{{ product.title }} lifestyle image">
            {% endif %}
          </div>
          <p class="text-xs md:text-sm lg:text-base mt-1.5 lg:mt-8 font-medium text-center">{{ product.title }}</p>
          {% if product.compare_at_price %}
          <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto"><span style="text-decoration: line-through;">{{ product.compare_at_price | money_without_trailing_zeros }}</span> <span style="color: #60cdcb; font-weight: bold;">{{ product.price | money_without_trailing_zeros }}</span></p>
          {% else %}
          <p class="text-xs md:text-sm lg:text-base pt-3 mt-auto">{{ product.price | money_without_trailing_zeros }}</p>
          {% endif %}
        </a>
      {% endif %}
    {% endfor %}
  </div>
</div>

<script>
  Vue.createApp({
    delimiters: ['{','}'],
    data() {
      return {
        filters: JSON.parse(`{{ filters_object }}`),
        minPrice: 0,
        maxPrice: 0,
      }
    },
    computed: {
      activeFilters() {
        return this.filters.filter(({ active }) => active);
      },
    },
    methods: {
      renderQuotes(str) {
        return str.replaceAll('&quot;', '"');
      },
      clearFilters() {
        this.$refs.collectionFilters.querySelectorAll('.filters input').forEach(input => {
          input.disabled = true;
        });
        this.handleSubmit();
      },
      removeFilter(selector) {
        this.$refs.collectionFilters.querySelectorAll(selector).forEach(input => {
          input.disabled = true;
        });
        this.handleSubmit();
      },
      handleSubmit() {
        this.$refs.collectionFilters.submit();
      },
      handleMinPriceChange({ target : { value }}) {
        this.minPrice = value;
      },
      handleMaxPriceChange({ target : { value }}) {
        this.maxPrice = value;
      }
    },
    mounted() {
      this.maxPrice = Number(this.$refs.maxPriceInput ? this.$refs.maxPriceInput.value || this.$refs.maxPriceInput.max : 0);
      this.minPrice = Number(this.$refs.minPriceInput ? this.$refs.minPriceInput.value || this.$refs.minPriceInput.min : 0);
    },
  }).mount('#filter-sort-modal');

  // Modal
  let modalOpen = false;
  openPane = "";

  function closeModal() {
    document.getElementById("filter-sort-modal").removeAttribute("open");
    document.getElementById("filter-pane").classList.remove("group-open:flex");
    document.getElementById("sort-pane").classList.remove("group-open:flex");
    document.querySelectorAll(".filter-icon-line").forEach((el) => {
      el.removeAttribute("open");
    });
    document.getElementById("sort-arrow").classList.remove("rotate-180");
    document.getElementById("collection-filters").classList.remove("lg:right-0");
    modalOpen = false;
  }

  function toggleFilter() {
    if (modalOpen) {
      if (openPane == "sort") {
        document.getElementById("sort-pane").classList.remove("group-open:flex");
        document.getElementById("filter-pane").classList.add("group-open:flex");
        document.getElementById("sort-arrow").classList.remove("rotate-180");
        document.getElementById("collection-filters").classList.remove("lg:right-0");
        document.querySelectorAll(".filter-icon-line").forEach((el) => {
          el.setAttribute("open", "");
        });
        openPane = "filter";
      } else {
        document.getElementById("filter-sort-modal").removeAttribute("open");
        document.getElementById("filter-pane").classList.remove("group-open:flex");
        document.querySelectorAll(".filter-icon-line").forEach((el) => {
          el.removeAttribute("open");
        });
        modalOpen = false;
      }
    } else {
      document.getElementById("filter-sort-modal").setAttribute("open", "");
      document.getElementById("filter-pane").classList.add("group-open:flex");
      document.querySelectorAll(".filter-icon-line").forEach((el) => {
        el.setAttribute("open", "");
      });
      modalOpen = true;
      openPane = "filter";
    }
  }

  function toggleSort() {
    if (modalOpen) {
      if (openPane == "filter") {
        document.getElementById("sort-pane").classList.add("group-open:flex");
        document.getElementById("filter-pane").classList.remove("group-open:flex");
        document.getElementById("sort-arrow").classList.add("rotate-180");
        document.getElementById("collection-filters").classList.add("lg:right-0");
        document.querySelectorAll(".filter-icon-line").forEach((el) => {
          el.removeAttribute("open");
        });
        openPane = "sort";
      } else {
        document.getElementById("filter-sort-modal").removeAttribute("open");
        document.getElementById("sort-pane").classList.remove("group-open:flex");
        document.getElementById("sort-arrow").classList.remove("rotate-180");
        document.getElementById("collection-filters").classList.remove("lg:right-0");
        modalOpen = false;
      }
    } else {
      document.getElementById("filter-sort-modal").setAttribute("open", "");
      document.getElementById("sort-pane").classList.add("group-open:flex");
      document.getElementById("sort-arrow").classList.add("rotate-180");
      document.getElementById("collection-filters").classList.add("lg:right-0");
      modalOpen = true;
      openPane = "sort";
    }
  }
</script>

{% schema %}
{
  "name": "Collection Template",
  "settings": [
    {
      "type": "checkbox",
      "id": "split_variants",
      "label": "Split color variants up",
      "info": "Products with color variants will have each variant displayed as it's own product"
    }
  ]
}
{% endschema %}
