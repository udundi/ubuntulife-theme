<script src="{{ 'vue.min.js' | asset_url }}"></script>

<!-- Styling for size chart -->
<style>
  div.best-fit-size-chart {
    width: auto;
  }

  div.best-fit-size-chart button.scr-open-size-chart {
    padding: unset;
    margin: unset;
    font-size: 14px;
    font-weight: 500;
    color: black;
  }

  div.best-fit-size-chart button.scr-open-size-chart.ruler3::before {
    display: none;
  }
</style>

<div id="product-info" class="flex flex-col">
  <div class="flex">
    <div class="hidden md:flex flex-col">
      <a v-for="(media, index) in productImages" :href="'#product-image-' + index"
        class="">
        <img :src="imageSize(media.src, '256x')" :alt="media.alt" loading="lazy" />
      </a>
    </div>
    <div class="product-carousel w-screen overflow-hidden">
      <div class="swiper-wrapper">
        <div class="swiper-slide" v-for="(media, index) in productImages" :id="'product-image-' + index">
          <picture>
            <source media="(min-width: 2560px)" :srcset="imageSize(media.src, '3840x')">
            <source media="(min-width: 1280px)" :srcset="imageSize(media.src, '2560x')">
            <source media="(min-width: 640px)" :srcset="imageSize(media.src, '1280x')">
            <source media="(max-width: 639px)" :srcset="imageSize(media.src, '640x')">
            <img class="" :src="imageSize(media.src, '2560x')" :alt="media.atl">
          </picture>
        </div>
      </div>
    </div>
  </div>
  <div class="px-5 pt-5 flex flex-col">

    <!-- Breadcrumbs start -->
    {% for c in product.collections %}
      {% case c.handle %}
        {% when 'shoes' %}
          {% assign collection_handle = 'shoes' %}
      {% endcase %}
    {% endfor %}
    <nav class="uppercase text-neutral-400 text-xs">
      <a href="/">HOME</a>
      <span class="mx-1">/</span>
      {% if collection_handle %}
        <a class="" href="/collections/{{ collection_handle }}">
          {{ collection_handle }}
        </a>
        <span class="mx-1">/</span>
      {% endif %}
      <span class="text-black">{{ product.title }}</span>
    </nav>
    <!-- Breadcrumbs end -->


    {% if product.options_by_name['color'] %}
      <h1 class="mt-2 uppercase text-neutral-700 font-black text-2xl">{ selectedVariant.title.split(" / ")[0] }</h1>
      <h2 class="mt-1 uppercase font-medium">{{ product.title }}</h2>
    {% else %}
      <h1 class="mt-2 uppercase text-neutral-700 font-black text-2xl">{{ product.title }}</h1>
    {% endif %}
    <span v-if="compareAtPrice > price" class="flex my-2">
        <span class="line-through decoration-downy-300 text-neutral-700">{ formatMoney(compareAtPrice) }</span>
        <span class="ml-2">{ formatMoney(price) }</span>
    </span>
    <span v-else class="flex my-2">
        <span>{ formatMoney(price) }</span>
    </span>

    <div v-for="option in product.options" class="flex flex-col">
      <div v-if="option.name.toLowerCase().includes('color')" class="mt-3 flex flex-wrap gap-1">
        <label v-for="(value, index) in option.values">
          <input 
            type="radio" 
            class="[&:checked_+_img]:border"
            v-model="options[option.name]" 
            :value="value" 
            hidden>
          <img
            class="rounded-full w-8 h-8 p-1 object-cover border-black cursor-pointer"
            :src="imageSize(colorImages[value.toLowerCase()].src, '128x')" 
            :alt="value">
        </label>
      </div>
      <div v-if="option.name.toLowerCase().includes('size')" class="mt-5 flex flex-col">
        <span class="flex justify-between">
          <p class="font-medium">SIZE</p>
          <div class="best-fit-size-chart"></div>
        </span>
        <div class="relative mt-1">
          <select
            v-model="options[option.name]" 
            class="w-full appearance-none py-3 px-4 bg-transparent border border-black" 
            name="" 
            id=""
          >
            <option 
              v-for="(value, index) in option.values" 
              :checked="options[option.name] == value" 
              :value="value" 
              >{ value }</option>
          </select>
          <svg class="w-8 h-8 p-2 absolute right-2 top-1/2 -translate-y-1/2  bg-downy-300 rounded-full pointer-events-none" width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.8894 0.188938L7.99929 6.90537L1.10916 0.188938C0.986054 0.0686954 0.820797 0.00137848 0.648713 0.00137848C0.476628 0.00137848 0.311372 0.0686954 0.188268 0.188938C0.128661 0.247341 0.0813067 0.317049 0.0489791 0.393983C0.0166514 0.470916 0 0.553527 0 0.636976C0 0.720426 0.0166514 0.803036 0.0489791 0.879969C0.0813067 0.956902 0.128661 1.02661 0.188268 1.08501L7.51817 8.23157C7.64689 8.35704 7.81954 8.42726 7.99929 8.42726C8.17905 8.42726 8.3517 8.35704 8.48042 8.23157L15.8103 1.08639C15.8703 1.02795 15.9181 0.958067 15.9506 0.880878C15.9832 0.80369 16 0.720758 16 0.636976C16 0.553195 15.9832 0.470262 15.9506 0.393074C15.9181 0.315885 15.8703 0.246006 15.8103 0.187559C15.6872 0.0673163 15.522 0 15.3499 0C15.1778 0 15.0125 0.0673163 14.8894 0.187559V0.188938Z" fill="white"/>
          </svg>
        </div>
      </div>
    </div>
    <div class="flex mt-4 mb-9">
      <div class="border border-black px-2 flex items-center w-1/3">
        <svg class="w-3 h-3" @click="updateQuantity(-1)" width="32" height="32" viewBox="0 0 24 24"><path fill="currentColor" d="M19 12.998H5v-2h14z"/></svg>
        <input class="w-8 flex-grow font-medium text-center" type="number" name="quantity" v-model="quantity" >
        <svg class="w-3 h-3" @click="updateQuantity(1)" width="32" height="32" viewBox="0 0 24 24"><path fill="currentColor" d="M19 12.998h-6v6h-2v-6H5v-2h6v-6h2v6h6z"/></svg>
      </div>
      <button 
        id="AddToCart" 
        @click="addToCart()" 
        :disabled="!selectedVariant.available" 
        class="bg-downy-300 disabled:bg-neutral-600 text-white font-black text-xl w-2/3 ml-3 py-4 transition-colors duration-300">
        <template v-if="selectedVariant.available">ADD TO CART</template>
        <template v-else>SOLD OUT</template>
      </button>
    </div>
      {% unless product.description == "" %}
        <div @click="toggleActiveAccordion('description')" class="flex items-center cursor-pointer py-6 border-t border-black">
          <span class="font-medium">DESCRIPTION</span>
          <svg :class="{ 'rotate-180': isActiveAccordion('description') }" class="transition-transform duration-300 ml-auto w-4 h-4 mr-2" width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.8894 0.188938L7.99929 6.90537L1.10916 0.188938C0.986054 0.0686954 0.820797 0.00137848 0.648713 0.00137848C0.476628 0.00137848 0.311372 0.0686954 0.188268 0.188938C0.128661 0.247341 0.0813067 0.317049 0.0489791 0.393983C0.0166514 0.470916 0 0.553527 0 0.636976C0 0.720426 0.0166514 0.803036 0.0489791 0.879969C0.0813067 0.956902 0.128661 1.02661 0.188268 1.08501L7.51817 8.23157C7.64689 8.35704 7.81954 8.42726 7.99929 8.42726C8.17905 8.42726 8.3517 8.35704 8.48042 8.23157L15.8103 1.08639C15.8703 1.02795 15.9181 0.958067 15.9506 0.880878C15.9832 0.80369 16 0.720758 16 0.636976C16 0.553195 15.9832 0.470262 15.9506 0.393074C15.9181 0.315885 15.8703 0.246006 15.8103 0.187559C15.6872 0.0673163 15.522 0 15.3499 0C15.1778 0 15.0125 0.0673163 14.8894 0.187559V0.188938Z" fill="black"/>
          </svg>
        </div>
        <div
          class="overflow-hidden transition-all duration-300"
          :style="{ 'max-height': getAccordionHeight('descriptionEl', 'description') + 'px' }"
          ref="descriptionEl">
          <div class="pt-1 pb-3">{{ product.description }}</div>
        </div>
      {% endunless %}
      {% unless section.settings.info_details_care == "" %}
        <div @click="toggleActiveAccordion('detailsCare')" class="flex items-center cursor-pointer py-6 border-t border-black">
          <span class="font-medium">DETAILS & CARE</span>
          <svg :class="{ 'rotate-180': isActiveAccordion('detailsCare') }" class="transition-transform duration-300 ml-auto w-4 h-4 mr-2" width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.8894 0.188938L7.99929 6.90537L1.10916 0.188938C0.986054 0.0686954 0.820797 0.00137848 0.648713 0.00137848C0.476628 0.00137848 0.311372 0.0686954 0.188268 0.188938C0.128661 0.247341 0.0813067 0.317049 0.0489791 0.393983C0.0166514 0.470916 0 0.553527 0 0.636976C0 0.720426 0.0166514 0.803036 0.0489791 0.879969C0.0813067 0.956902 0.128661 1.02661 0.188268 1.08501L7.51817 8.23157C7.64689 8.35704 7.81954 8.42726 7.99929 8.42726C8.17905 8.42726 8.3517 8.35704 8.48042 8.23157L15.8103 1.08639C15.8703 1.02795 15.9181 0.958067 15.9506 0.880878C15.9832 0.80369 16 0.720758 16 0.636976C16 0.553195 15.9832 0.470262 15.9506 0.393074C15.9181 0.315885 15.8703 0.246006 15.8103 0.187559C15.6872 0.0673163 15.522 0 15.3499 0C15.1778 0 15.0125 0.0673163 14.8894 0.187559V0.188938Z" fill="black"/>
          </svg>
        </div>
        <div
          class="overflow-hidden transition-all duration-300"
          :style="{ 'max-height': getAccordionHeight('detailsCareEl', 'detailsCare') + 'px' }"
          ref="detailsCareEl">
          <div class="pt-1 pb-3">{{ section.settings.info_details_care }}</div>
        </div>
      {% endunless %}
      {% unless section.settings.info_how_made == "" %}
        <div @click="toggleActiveAccordion('infoMade')" class="flex items-center cursor-pointer py-6 border-t border-black">
          <span class="font-medium">HOW IT WAS MADE</span>
          <svg :class="{ 'rotate-180': isActiveAccordion('infoMade') }" class="transition-transform duration-300 ml-auto w-4 h-4 mr-2" width="16" height="9" viewBox="0 0 16 9" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M14.8894 0.188938L7.99929 6.90537L1.10916 0.188938C0.986054 0.0686954 0.820797 0.00137848 0.648713 0.00137848C0.476628 0.00137848 0.311372 0.0686954 0.188268 0.188938C0.128661 0.247341 0.0813067 0.317049 0.0489791 0.393983C0.0166514 0.470916 0 0.553527 0 0.636976C0 0.720426 0.0166514 0.803036 0.0489791 0.879969C0.0813067 0.956902 0.128661 1.02661 0.188268 1.08501L7.51817 8.23157C7.64689 8.35704 7.81954 8.42726 7.99929 8.42726C8.17905 8.42726 8.3517 8.35704 8.48042 8.23157L15.8103 1.08639C15.8703 1.02795 15.9181 0.958067 15.9506 0.880878C15.9832 0.80369 16 0.720758 16 0.636976C16 0.553195 15.9832 0.470262 15.9506 0.393074C15.9181 0.315885 15.8703 0.246006 15.8103 0.187559C15.6872 0.0673163 15.522 0 15.3499 0C15.1778 0 15.0125 0.0673163 14.8894 0.187559V0.188938Z" fill="black"/>
          </svg>
        </div>
        <div
          class="overflow-hidden transition-all duration-300"
          :style="{ 'max-height': getAccordionHeight('infoMadeEl', 'infoMade') + 'px' }"
          ref="infoMadeEl">
          <div class="pt-1 pb-3">{{ section.settings.info_how_made }}</div>
        </div>
      {% endunless %}
  </div>
</div>

<!-- Product info sections -->
<div class="w-screen max-w-md mx-auto lg:max-w-screen-xl">
  {% unless section.settings.info_header_1 == "" %}
    <div class="flex flex-col-reverse lg:flex-row lg:items-center mt-16 lg:w-5/6 lg:mx-auto">
      <div class="flex flex-col items-center lg:items-start px-10 xl:px-24 text-center mt-10 lg:mt-0 lg:text-left lg:w-3/4">
        <span class="text-neutral-700 text-xl xl:text-2xl font-black uppercase">{{ section.settings.info_header_1 }}</span>
        <p class="mt-2 xl:mt-4">{{ section.settings.info_text_1 }}</p>
      </div>
      <picture>
        <source media="(min-width: 640px)" srcset="{{ section.settings.info_media_1 | image_url: width: 1280 }}">
        <source media="(max-width: 639px)" srcset="{{ section.settings.info_media_1 | image_url: width: 640 }}">
        <img class="w-full" src="{{ section.settings.info_media_1 | image_url: width: 1280 }}" alt="{{ section.settings.info_header_1 }}">
      </picture>
    </div>
  {% endunless %}
  {% unless section.settings.info_header_2 == "" %}
    <div class="flex flex-col-reverse lg:flex-row lg:items-center mt-16 lg:w-5/6 lg:mx-auto">
      <div class="flex flex-col items-center lg:items-start px-10 xl:px-24 text-center mt-10 lg:mt-0 lg:text-left lg:w-3/4">
        <span class="text-neutral-700 text-xl xl:text-2xl font-black uppercase">{{ section.settings.info_header_2 }}</span>
        <p class="mt-2 xl:mt-4">{{ section.settings.info_text_2 }}</p>
      </div>
      <picture>
        <source media="(min-width: 640px)" srcset="{{ section.settings.info_media_2 | image_url: width: 1280 }}">
        <source media="(max-width: 639px)" srcset="{{ section.settings.info_media_2 | image_url: width: 640 }}">
        <img class="w-full" src="{{ section.settings.info_media_2 | image_url: width: 1280 }}" alt="{{ section.settings.info_header_2 }}">
      </picture>
    </div>
  {% endunless %}
  {% unless section.settings.info_header_3 == "" %}
    <div class="flex flex-col-reverse lg:flex-row lg:items-center mt-16 lg:w-5/6 lg:mx-auto">
      <div class="flex flex-col items-center lg:items-start px-10 xl:px-24 text-center mt-10 lg:mt-0 lg:text-left lg:w-3/4">
        <span class="text-neutral-700 text-xl xl:text-2xl font-black uppercase">{{ section.settings.info_header_3 }}</span>
        <p class="mt-2 xl:mt-4">{{ section.settings.info_text_3 }}</p>
      </div>
      <picture>
        <source media="(min-width: 640px)" srcset="{{ section.settings.info_media_3 | image_url: width: 1280 }}">
        <source media="(max-width: 639px)" srcset="{{ section.settings.info_media_3 | image_url: width: 640 }}">
        <img class="w-full" src="{{ section.settings.info_media_3 | image_url: width: 1280 }}" alt="{{ section.settings.info_header_3 }}">
      </picture>
    </div>
  {% endunless %}
</div>

<!-- You may also like (flows to recommended section in product.template) -->
<div class="flex px-10">
  <span class="w-screen text-center mt-16 pt-16 border-t md:border-t-0 border-neutral-600 text-neutral-500 text-2xl md:text-3xl font-black">YOU MAY ALSO LIKE</span>
</div>

<script>
  let ud_product = {{ product | json }}
  ud_product.options = {{ product.options_with_values | json }}

  let previewSwiper;
  document.addEventListener("DOMContentLoaded", () => {
    previewSwiper = new Swiper(".product-carousel", {
      slidesPerView: 'auto'
    });

    Vue.createApp({
      delimiters: ['{', '}'],
      data() {
        return {
          product: ud_product,
          options: {},
          productImages: [],
          quantity: 1,
          activeAccordion: ""
        }
      },
      computed: {
        colorImages() {
          let option = this.product.options.find(
            (x) => x.name == "Color"
          );

          if (option) {
            let colorImages = {};

            for (const color of option.values) {
              for (const image of this.product.media) {
                if (image.alt !== null && image.alt.toLowerCase() == color.toLowerCase()) {
                  colorImages[color.toLowerCase()] = image;
                }
              }
            }
            return colorImages;
          } else {
            return {}
          }
        },
        price() {
          return this.selectedVariant.price;
        },
        compareAtPrice() {
          return this.selectedVariant.compare_at_price;
        },
        selectedVariant() {
          let variants = this.product.variants;
          let options = [];
    
          for (const [key, value] of Object.entries(this.options)) {
            options.push(value);
          }
    
          let variant = variants.find((variant) => {
            let variantOptions = variant.title.split(' / ');
            if(variantOptions.length == options.length && variantOptions.every(x => options.includes(x))) {
              return variant;
            }
          });
    
          return variant;
        }
      },
      mounted() {
        this.$nextTick(() => {
          this.updateProductImages();
        });
      },
      watch: {
        selectedVariant: function () {
          this.updateProductImages();

          if (window.history.pushState) {
            let searchParams = new URLSearchParams(window.location.search);
            searchParams.set('variant', this.selectedVariant.id);

            let newPath = window.location.pathname + '?' + searchParams.toString() + window.location.hash;
            window.history.pushState(null, '', newPath);
          }
        },
      },
      methods: {
        toggleActiveAccordion(accordion) {
          this.activeAccordion = this.activeAccordion == accordion ? "" : accordion;
        },
        isActiveAccordion(accordion) {
          return this.activeAccordion == accordion;
        },
        getAccordionHeight(el, accordion) {
          return this.activeAccordion == accordion ? this.$refs[el].scrollHeight + 16 : 0;
        },
        updateQuantity(amount) {
          let quantity = this.quantity + amount;
          this.quantity = quantity <= 0 ? 1 : quantity;
        },
        addToCart() {
          CartJS.addItem(this.selectedVariant.id, this.quantity);
        },
        formatMoney(value) {
          return Shopify.formatMoney(value);
        },
        updateProductImages() {
          let option = this.product.options.find(
            (x) => x.name == "Color"
          );
          let value, filteredImages;

          if (option) {
            value = this.selectedVariant["option" + option.position];
            filteredImages = this.product.media.filter((x) => {
              if (x.alt == null) return false;

              if (x.alt.toLowerCase().includes(value.toLowerCase()) &&
                x.alt.toLowerCase() !== value.toLowerCase()) return true;
            });
          }

          if (filteredImages && filteredImages.length > 0) {
            this.productImages = filteredImages;

            if (previewSwiper) {
              previewSwiper.slideTo(0, 0);
            }
          } else {
            this.productImages = this.product.media;
          }
        },
        imageSize(src, size) {
          return src.replace(/\.jpg|\.png|\.gif|\.jpeg/g, function (match) {
            return "_" + size + match;
          });
        },
      },
      created() {
        let searchParams = new URLSearchParams(window.location.search);
        let selectedVariant = this.product.variants.find(
          (x) => x.id == searchParams.get("variant")
        );

        if (selectedVariant !== undefined) {
          this.product.options.forEach((option, index) => {
            this.options[option.name] = selectedVariant.options[index];
          });
        } else {
          this.product.options.forEach((option, index) => {
            this.options[option.name] = option.values[0];
          });
        }
      },
    }).mount('#product-info')
  });
</script>

{% schema %}
{
  "name": "Product Template",
  "settings": [
    {
      "type": "richtext",
      "id": "info_details_care",
      "label": "Details & Care"
    },
    {
      "type": "richtext",
      "id": "info_how_made",
      "label": "How It Was Made"
    },
    {
      "type": "text",
      "id": "info_header_1",
      "label": "Info Header 1"
    },
    {
      "type": "richtext",
      "id": "info_text_1",
      "label": "Info Text 1"
    },
    {
      "type": "image_picker",
      "id": "info_media_1",
      "label": "Info Media 1"
    },
    {
      "type": "text",
      "id": "info_header_2",
      "label": "Info Header 2"
    },
    {
      "type": "richtext",
      "id": "info_text_2",
      "label": "Info Text 2"
    },
    {
      "type": "image_picker",
      "id": "info_media_2",
      "label": "Info Media 2"
    },
    {
      "type": "text",
      "id": "info_header_3",
      "label": "Info Header 3"
    },
    {
      "type": "richtext",
      "id": "info_text_3",
      "label": "Info Text 3"
    },
    {
      "type": "image_picker",
      "id": "info_media_3",
      "label": "Info Media 3"
    }
  ]
}
{% endschema %}